[{"C:\\temp\\LoginSystem\\client\\src\\index.js":"1","C:\\temp\\LoginSystem\\client\\src\\App.js":"2","C:\\temp\\LoginSystem\\client\\src\\reportWebVitals.js":"3","C:\\temp\\LoginSystem\\client\\src\\components\\Register.js":"4","C:\\temp\\LoginSystem\\client\\src\\components\\Profile.js":"5","C:\\temp\\LoginSystem\\client\\src\\ProtectedRoute.js":"6","C:\\temp\\LoginSystem\\client\\src\\components\\Login.js":"7","C:\\temp\\LoginSystem\\client\\src\\components\\Navbar.js":"8","C:\\temp\\LoginSystem\\client\\src\\components\\AccessKey.js":"9","C:\\temp\\LoginSystem\\client\\src\\api\\url.js":"10","C:\\temp\\LoginSystem\\client\\src\\components\\Chatboard.js":"11","C:\\temp\\socketio_chat\\client\\src\\index.js":"12","C:\\temp\\socketio_chat\\client\\src\\reportWebVitals.js":"13","C:\\temp\\socketio_chat\\client\\src\\App.js":"14","C:\\temp\\socketio_chat\\client\\src\\ProtectedRoute.js":"15","C:\\temp\\socketio_chat\\client\\src\\components\\Login.js":"16","C:\\temp\\socketio_chat\\client\\src\\components\\Navbar.js":"17","C:\\temp\\socketio_chat\\client\\src\\components\\Register.js":"18","C:\\temp\\socketio_chat\\client\\src\\components\\AccessKey.js":"19","C:\\temp\\socketio_chat\\client\\src\\components\\Chatboard.js":"20","C:\\temp\\socketio_chat\\client\\src\\components\\Profile.js":"21","C:\\temp\\socketio_chat\\client\\src\\api\\url.js":"22","C:\\temp\\socketio_chat\\client\\src\\components\\CodeGenerator.js":"23","C:\\temp\\socketio_chat\\client\\src\\components\\CodeSubmitForm.js":"24","C:\\temp\\socketio_chat\\client\\src\\components\\Modal\\ReqSenderMsgBox.js":"25","C:\\temp\\socketio_chat\\client\\src\\components\\Modal\\ReqReceiverMsgBox.js":"26","C:\\temp\\socketio_chat\\client\\src\\components\\Modal\\ReqErrorMsgBox.js":"27"},{"size":478,"mtime":1610520491307,"results":"28","hashOfConfig":"29"},{"size":2145,"mtime":1610865591275,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":2235,"mtime":1610810870973,"results":"32","hashOfConfig":"29"},{"size":176,"mtime":1610531911188,"results":"33","hashOfConfig":"29"},{"size":771,"mtime":1610733434153,"results":"34","hashOfConfig":"29"},{"size":2002,"mtime":1610737170015,"results":"35","hashOfConfig":"29"},{"size":622,"mtime":1610813070122,"results":"36","hashOfConfig":"29"},{"size":6107,"mtime":1610885113143,"results":"37","hashOfConfig":"29"},{"size":100,"mtime":1610810760901,"results":"38","hashOfConfig":"29"},{"size":3503,"mtime":1610885274046,"results":"39","hashOfConfig":"29"},{"size":478,"mtime":1610520491307,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":2525,"mtime":1611853172103,"results":"43","hashOfConfig":"41"},{"size":771,"mtime":1610733434153,"results":"44","hashOfConfig":"41"},{"size":2802,"mtime":1611841773070,"results":"45","hashOfConfig":"41"},{"size":622,"mtime":1611757514156,"results":"46","hashOfConfig":"41"},{"size":3109,"mtime":1611842086590,"results":"47","hashOfConfig":"41"},{"size":4297,"mtime":1611773512497,"results":"48","hashOfConfig":"41"},{"size":5365,"mtime":1611842788426,"results":"49","hashOfConfig":"41"},{"size":176,"mtime":1610531911188,"results":"50","hashOfConfig":"41"},{"size":100,"mtime":1610810760901,"results":"51","hashOfConfig":"41"},{"size":2490,"mtime":1611841649483,"results":"52","hashOfConfig":"41"},{"size":1512,"mtime":1611840938710,"results":"53","hashOfConfig":"41"},{"size":1181,"mtime":1611652398239,"results":"54","hashOfConfig":"41"},{"size":885,"mtime":1611650389884,"results":"55","hashOfConfig":"41"},{"size":757,"mtime":1611648928510,"results":"56","hashOfConfig":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"nq789h",{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1ivaz4g",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"C:\\temp\\LoginSystem\\client\\src\\index.js",[],["129","130"],"C:\\temp\\LoginSystem\\client\\src\\App.js",["131"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport AccessKey from \"./components/AccessKey\";\nimport Chatboard from \"./components/Chatboard\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(\n    sessionStorage.getItem(\"loginState\") || false\n  );\n\n  const [userName, setuserName] = useState(\n    sessionStorage.getItem(\"userName\") || \"\"\n  );\n\n  const [chatStarted, setchatStart] = useState(false);\n  const [chatChannel, setchatChannel] = useState(\"\");\n\n  const confirmAuth = (authed, username) => {\n    if (authed) {\n      setIsAuth(true);\n      setuserName(username);\n      console.log(\"appjs\");\n    }\n  };\n\n  const confirmLogout = () => {\n    sessionStorage.removeItem(\"loginState\");\n    setIsAuth(false);\n  };\n\n  const confirmJoinedroom = (channelCode) => {\n    console.log(\"props.confirmJoinedroom\" + channelCode);\n    setchatStart(true);\n    setchatChannel(channelCode);\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar\n          userName={userName}\n          isAuth={isAuth}\n          confirmlogout={confirmLogout}\n        />\n        <Route path=\"/\" exact>\n          {!isAuth ? <a href=\"/login\">Click here to login</a> : null}\n        </Route>\n\n        <Route path=\"/chat\" exact>\n          {!chatStarted ? (\n            <AccessKey chatStarted={confirmJoinedroom} userName={userName} />\n          ) : (\n            <Chatboard channel={chatChannel} userName={userName} />\n          )}\n        </Route>\n        <Route path=\"/login\" exact>\n          {!isAuth ? <Login isAuth={confirmAuth} /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route path=\"/register\" exact>\n          <Register />\n        </Route>\n        <ProtectedRoute\n          path=\"/profile\"\n          isProtected={isAuth}\n          component={Profile}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\temp\\LoginSystem\\client\\src\\reportWebVitals.js",[],"C:\\temp\\LoginSystem\\client\\src\\components\\Register.js",["132"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { serverhost } from \"../api/url\";\r\nimport \"../css/register.css\";\r\n\r\nexport default function Register(props) {\r\n  const [usernameReg, setusernameReg] = useState(\"\");\r\n  const [passwordReg, setpasswordReg] = useState(\"\");\r\n\r\n  const [pagemessage, setpagemessage] = useState(\"\");\r\n\r\n  //reigster: req to backend\r\n  const register = () => {\r\n    if (usernameReg && passwordReg) {\r\n      Axios.post(`${serverhost.url}/register`, {\r\n        username: usernameReg,\r\n        password: passwordReg,\r\n      }).then((response) => {\r\n        console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaa\");\r\n        setpagemessage(\"Registered !\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form style={{ border: \"1px solid #1eaabd\" }}>\r\n        <div className=\"container\">\r\n          <h1>Sign Up</h1>\r\n          <p>Please fill in this form to create an account.</p>\r\n          <hr />\r\n          <label htmlFor=\"email\">\r\n            <b>Username</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter username\"\r\n            onChange={(e) => {\r\n              setusernameReg(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n          <label htmlFor=\"pwd\">\r\n            <b>Password</b>\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            onChange={(e) => {\r\n              setpasswordReg(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n          <label htmlFor=\"pwd-repeat\">\r\n            <b>Repeat Password</b>\r\n          </label>\r\n          <input type=\"password\" placeholder=\"Repeat Password\" required />\r\n          <p>\r\n            By creating an account you agree to our{\" \"}\r\n            <a href=\"#\" style={{ color: \"dodgerblue\" }}>\r\n              Terms &amp; Privacy\r\n            </a>\r\n            .\r\n          </p>\r\n          <p>\r\n            Already have a account ?<a href=\"/login\"> Login here</a>\r\n          </p>\r\n        </div>\r\n        <h4>{pagemessage}</h4>\r\n      </form>\r\n      <button className=\"signupbtn buttonform\" onClick={register}>\r\n        Sign Up\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\temp\\LoginSystem\\client\\src\\components\\Profile.js",[],"C:\\temp\\LoginSystem\\client\\src\\ProtectedRoute.js",["133"],"import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n//props: isAuth:boolean, component: component\r\nfunction ProtectedRoute({\r\n  isProtected: isProtected,\r\n  component: Component,\r\n  ...rest\r\n}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isProtected) {\r\n          return <Component />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    ></Route>\r\n  );\r\n  //</div>/return <Route component={props.component}></Route>;\r\n  //return <Profile value={props.isAuth ? \"1\" : \"2\"} />;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","C:\\temp\\LoginSystem\\client\\src\\components\\Login.js",["134"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { serverhost } from \"../api/url\";\r\n\r\nexport default function Login(props) {\r\n  const [usernameLogin, setusernameLogin] = useState(\"\");\r\n  const [passwordLogin, setpasswordLogin] = useState(\"\");\r\n\r\n  const [status, setstatus] = useState(\"\");\r\n\r\n  const login = () => {\r\n    if (usernameLogin && passwordLogin) {\r\n      Axios.post(`${serverhost.url}/login`, {\r\n        username: usernameLogin,\r\n        password: passwordLogin,\r\n      }).then((response) => {\r\n        console.log(response.data.message);\r\n        if (response.data.message != \"tempToken\") {\r\n          setstatus(\"username/password incorrect\");\r\n          console.log(\"username/password incorrect\");\r\n        } else {\r\n          props.isAuth(true, usernameLogin);\r\n          sessionStorage.setItem(\"loginState\", true);\r\n          sessionStorage.setItem(\"userName\", usernameLogin);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form style={{ border: \"1px solid #1eaabd\" }}>\r\n        <div className=\"container\">\r\n          <h1>Login</h1>\r\n          <hr />\r\n          <label htmlFor=\"email\">\r\n            <b>User name</b>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter username\"\r\n            name=\"username\"\r\n            onChange={(e) => {\r\n              setusernameLogin(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n          <label htmlFor=\"psw\">\r\n            <b>Password</b>\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            name=\"password\"\r\n            onChange={(e) => {\r\n              setpasswordLogin(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n          <h4 style={{ color: \"red\" }}>{status}</h4>\r\n        </div>\r\n      </form>\r\n      <button className=\"signupbtn buttonform\" onClick={login}>\r\n        Login\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\temp\\LoginSystem\\client\\src\\components\\Navbar.js",["135"],"import React from \"react\";\r\nimport \"../css/navbar.css\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          <a className=\"active\" href=\"/chat\">\r\n            Chat\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/Profile\">Profile</a>\r\n        </li>\r\n        {!props.isAuth ? (\r\n          <li style={{ float: \"right\" }}>\r\n            <a href=\"/register\">Register</a>\r\n          </li>\r\n        ) : null}\r\n        <li style={{ float: \"right\" }}>\r\n          <a style={{ float: \"right\" }}> {props.userName}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","C:\\temp\\LoginSystem\\client\\src\\components\\AccessKey.js",["136","137","138","139","140","141","142","143","144","145"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { serverhost } from \"../api/url\";\r\nimport io from \"socket.io-client\";\r\nimport Modal from \"react-modal\";\r\n\r\nlet socket;\r\n\r\nexport default function AccessKey(props) {\r\n  const [accessID, setaccessID] = useState(\"\");\r\n  const [accessCode, setaccessCode] = useState(\"---\");\r\n\r\n  const [expireCounter, setexpireCounter] = useState(0);\r\n\r\n  const [join_accessCode, setjoin_accessCode] = useState(\"\");\r\n\r\n  const [peerJoinrequest, setpeerJoinrequest] = useState(false);\r\n\r\n  const [request_status_message, setrequest_status_message] = useState(\"\");\r\n  const [receivedRequest, setreceivedRequest] = useState(false);\r\n\r\n  const fakeToken = \"000\";\r\n\r\n  // TO DO:\r\n  // move the socket instance to chatboard\r\n  // JOIN ! btn to check backend code valid, YES: set props.isJOin true and redirect to /Chatboard NO: false mesage\r\n  // and pass joincode to chatboard\r\n  // If\r\n\r\n  useEffect(() => {\r\n    socket = io(serverhost.url);\r\n  }, [serverhost]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n\r\n    expireCounter > 0 &&\r\n      setTimeout(() => {\r\n        if (!unmounted) {\r\n          setexpireCounter(expireCounter - 1);\r\n        }\r\n      }, 1000);\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, [expireCounter]);\r\n\r\n  //Join the socket room with access code\r\n  useEffect(() => {\r\n    console.log(\"Access Code chagned\");\r\n    socket.emit(\"join_room\", { user: props.userName, code: accessCode });\r\n  }, [accessCode]);\r\n\r\n  //listen to peer request\r\n  useEffect(() => {\r\n    socket.on(\"peer_request\", (data) => {\r\n      console.log(\" There is a request from user \" + data);\r\n      setreceivedRequest(true);\r\n    });\r\n  });\r\n\r\n  //listen to peer response\r\n  useEffect(() => {\r\n    // Received 3 times here\r\n    // BUG: When onChange, it call  the App.js setState function. it will render\r\n    // this component again.\r\n    socket.on(\"peer_response\", (data) => {\r\n      console.log(\" There is a response from user :\" + data);\r\n      if (data == \"accepted\") {\r\n        props.chatStarted(join_accessCode);\r\n      } else {\r\n        console.log(\"Not a request\");\r\n      }\r\n    });\r\n  });\r\n\r\n  //send request to target\r\n  const requestToChannel = () => {\r\n    //props.chatStarted(true);\r\n    //console.log(join_accessCode);\r\n    //socket.emit(\"join_request\", join_accessCode);\r\n    //socket.emit(\"join_room\", join_accessCode);\r\n    if (validateKey(join_accessCode)) {\r\n      socket.emit(\"join_room\", { user: props.userName, code: join_accessCode });\r\n      socket.emit(\"join_request\", {\r\n        room: `${join_accessCode}`,\r\n        message: \"request\",\r\n      });\r\n    } else {\r\n      setrequest_status_message(\"Invalid access code\");\r\n    }\r\n  };\r\n\r\n  //response to the requestor\r\n  const accpetRequest = () => {\r\n    console.log(\"send accpet  reponse\" + accessCode);\r\n    socket.emit(\"join_response\", {\r\n      room: `${accessCode}`,\r\n      message: \"accepted\",\r\n    });\r\n    console.log(\"acceptRequest  ****************\");\r\n    props.chatStarted(accessCode);\r\n  };\r\n\r\n  const declineRequest = () => {};\r\n\r\n  //Validate key from backend\r\n  const validateKey = (join_accessCode) => {\r\n    return true;\r\n  };\r\n\r\n  //Gen random code from backend\r\n  const getKey = () => {\r\n    Axios.post(`${serverhost.url}/keygen`, {\r\n      token: fakeToken,\r\n    }).then((response) => {\r\n      console.log(response.data.code);\r\n      setaccessCode(response.data.code);\r\n      startTimer();\r\n    });\r\n  };\r\n\r\n  const startTimer = () => {\r\n    setexpireCounter(60);\r\n  };\r\n\r\n  const socket_discoonect = () => {\r\n    socket.disconnect();\r\n  };\r\n\r\n  const customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n    },\r\n  };\r\n\r\n  function closeModal() {\r\n    setreceivedRequest(false);\r\n  }\r\n  var subtitle;\r\n\r\n  return (\r\n    <div className=\"formContainer\">\r\n      <div className=\"form\">\r\n        <form style={{ border: \"1px solid #1eaabd\" }}>\r\n          <div className=\"container\">\r\n            <p>{accessID}</p>\r\n            <div style={{ letterSpacing: \"10px\" }}>\r\n              <h1 style={expireCounter === 0 ? { color: \"#DCDCDC\" } : null}>\r\n                {accessCode}\r\n              </h1>\r\n            </div>\r\n            {expireCounter > 0 ? (\r\n              <h5>After {expireCounter} second, the code will expire</h5>\r\n            ) : (\r\n              <h5>Code expired, please get a new code</h5>\r\n            )}\r\n          </div>\r\n        </form>\r\n        {expireCounter == 0 ? (\r\n          <button className=\"buttonform\" onClick={getKey}>\r\n            Get a new key\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"form\">\r\n        <form style={{ border: \"1px solid #1eaabd\" }}>\r\n          <div className=\"container\">\r\n            <label htmlFor=\"Code\"></label>\r\n            <h4>Access your peers chat channel</h4>\r\n            <input\r\n              type=\"text\"\r\n              style={{ textAlign: \"center\", letterSpacing: \"10px\" }}\r\n              maxLength=\"4\"\r\n              placeholder=\"your peers code\"\r\n              onChange={(e) => {\r\n                if (e.target.value.length == 4) {\r\n                  setjoin_accessCode(e.target.value);\r\n                  console.log(\"AccessKey: \" + e.target.value);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        </form>\r\n        <button className=\"buttonform \" onClick={requestToChannel}>\r\n          {\" \"}\r\n          Join !{\" \"}\r\n        </button>\r\n        <button onClick={socket_discoonect}></button>\r\n        <h2>{request_status_message}</h2>\r\n      </div>\r\n      {receivedRequest ? (\r\n        <Modal\r\n          isOpen={receivedRequest}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          <h2>You have received a chat request !</h2>\r\n          <button onClick={accpetRequest}>Accept</button>\r\n          <button onClick={closeModal}>Not now</button>\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\temp\\LoginSystem\\client\\src\\api\\url.js",[],"C:\\temp\\LoginSystem\\client\\src\\components\\Chatboard.js",["146","147","148","149"],"C:\\temp\\socketio_chat\\client\\src\\index.js",[],["150","151"],"C:\\temp\\socketio_chat\\client\\src\\reportWebVitals.js",[],"C:\\temp\\socketio_chat\\client\\src\\App.js",["152","153"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport AccessKey from \"./components/AccessKey\";\nimport Chatboard from \"./components/Chatboard\";\nimport Axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(\n    sessionStorage.getItem(\"loginState\") || false\n  );\n\n  const [userName, setuserName] = useState(\n    sessionStorage.getItem(\"userName\") || \"\"\n  );\n\n  const [chatStarted, setchatStart] = useState(false);\n  const [chatChannel, setchatChannel] = useState(\"\");\n\n  const confirmAuth = (authed, username) => {\n    if (authed) {\n      setIsAuth(true);\n      setuserName(username);\n      console.log(\"appjs\");\n    }\n  };\n\n  const confirmLogout = () => {\n    sessionStorage.removeItem(\"loginState\");\n    setIsAuth(false);\n  };\n\n  const confirmJoinedroom = (channelCode) => {\n    console.log(\"props.confirmJoinedroom\" + channelCode);\n    setchatChannel(channelCode);\n    setchatStart(true);\n  };\n\n  const userAuthtemp = () => {\n    Axios.get(\"http://ccp.zone:3001/isUserAuth\", {\n      headers: {\n        \"x-access-token\": sessionStorage.getItem(\"token\"),\n      },\n    }).then((response) => {\n      console.log(response);\n    });\n  };\n  return (\n    <div className=\"App\">\n      <Router>\n        {isAuth ? (\n          <Navbar\n            userName={userName}\n            isAuth={isAuth}\n            confirmlogout={confirmLogout}\n          />\n        ) : null}\n\n        <Route path=\"/\" exact>\n          {!isAuth ? <Login isAuth={confirmAuth} /> : <Redirect to=\"/chat\" />}\n        </Route>\n\n        <Route path=\"/chat\" exact>\n          {!isAuth ? (\n            <Redirect to=\"/\" />\n          ) : !chatStarted ? (\n            <AccessKey chatStarted={confirmJoinedroom} userName={userName} />\n          ) : (\n            <Chatboard channel={chatChannel} userName={userName} />\n          )}\n        </Route>\n        <Route path=\"/login\" exact>\n          {!isAuth ? <Login isAuth={confirmAuth} /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route path=\"/register\" exact>\n          <Register />\n        </Route>\n        <ProtectedRoute\n          path=\"/profile\"\n          isProtected={isAuth}\n          component={Profile}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\temp\\socketio_chat\\client\\src\\ProtectedRoute.js",["154"],"C:\\temp\\socketio_chat\\client\\src\\components\\Login.js",["155"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { serverhost } from \"../api/url\";\r\nimport styles from \"../css/signInOut.module.css\";\r\nimport chat_logo from \"../image/chat_logo.svg\";\r\n\r\nexport default function Login(props) {\r\n  const [usernameLogin, setusernameLogin] = useState(\"\");\r\n  const [passwordLogin, setpasswordLogin] = useState(\"\");\r\n\r\n  const [status, setstatus] = useState(\"\");\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    if (usernameLogin && passwordLogin) {\r\n      Axios.post(`${serverhost.url}/login`, {\r\n        username: usernameLogin,\r\n        password: passwordLogin,\r\n      }).then((response) => {\r\n        console.log(response.data);\r\n        if (!response.data.auth) {\r\n          setstatus(\"username/password incorrect\");\r\n          //console.log(\"username/password incorrect\");\r\n        } else {\r\n          props.isAuth(true, usernameLogin);\r\n          sessionStorage.setItem(\"token\", response.data.token);\r\n          sessionStorage.setItem(\"loginState\", true);\r\n          sessionStorage.setItem(\"userName\", usernameLogin);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginPage}>\r\n      <div className={`${styles.wrapper} ${styles.fadeInDown}`}>\r\n        <div className={styles.formContent}>\r\n          {/* Tabs Titles */}\r\n          <h2 className={styles.active}>Sign In</h2>\r\n          {/* Icon */}\r\n          <div className={`${styles.fadeIn} ${styles.first}`}>\r\n            <img src={chat_logo} className={styles.icon} />\r\n          </div>\r\n          {/* Login Form */}\r\n          <form onSubmit={login}>\r\n            <input\r\n              type=\"text\"\r\n              className={`${styles.input} ${styles.fadeIn} ${styles.second}`}\r\n              placeholder=\"username\"\r\n              onChange={(e) => {\r\n                setusernameLogin(e.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className={`${styles.input} ${styles.fadeIn} ${styles.third}`}\r\n              placeholder=\"password\"\r\n              name=\"password\"\r\n              onChange={(e) => {\r\n                setpasswordLogin(e.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              className={`${styles.input} ${styles.fadeIn} ${styles.fourth}`}\r\n              defaultValue=\"Log In\"\r\n            />\r\n            <h4 style={{ color: \"red\", marginbottom: \"10px\" }}>{status}</h4>\r\n          </form>\r\n          {/* Remind Passowrd */}\r\n          <div className={styles.formFooter}>\r\n            <a className={styles.underlineHover} href=\"/register\">\r\n              Register here !\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\temp\\socketio_chat\\client\\src\\components\\Navbar.js",["156"],"C:\\temp\\socketio_chat\\client\\src\\components\\Register.js",["157"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { serverhost } from \"../api/url\";\r\n//import \"../css/register.css\";\r\nimport styles from \"../css/signInOut.module.css\";\r\n\r\nexport default function Register(props) {\r\n  const [usernameReg, setusernameReg] = useState(\"\");\r\n  const [passwordReg, setpasswordReg] = useState(\"\");\r\n\r\n  const [pagemessage, setpagemessage] = useState(\"\");\r\n\r\n  //reigster: req to backend\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    if (usernameReg && passwordReg) {\r\n      Axios.post(`${serverhost.url}/register`, {\r\n        username: usernameReg,\r\n        password: passwordReg,\r\n      }).then((response) => {\r\n        setpagemessage(\"Registered !\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginPage}>\r\n      <div className={`${styles.wrapper} ${styles.fadeInDown}`}>\r\n        <div className={styles.formContent}>\r\n          {/* Tabs Titles */}\r\n          <h2 className={`${styles.active}`}>sign up</h2>\r\n\r\n          {/* Register Form */}\r\n          <form onSubmit={register}>\r\n            <label className={styles.label} for=\"username\">\r\n              User name :\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              name=\"username\"\r\n              onChange={(e) => {\r\n                setusernameReg(e.target.value);\r\n              }}\r\n              required\r\n            />\r\n            <label className={styles.label} for=\"password\">\r\n              Password :\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              name=\"password\"\r\n              required\r\n              onChange={(e) => {\r\n                setpasswordReg(e.target.value);\r\n              }}\r\n            />\r\n            <label className={styles.label} for=\"password\">\r\n              Repeat Password :\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              type=\"password\"\r\n              placeholder=\"Repeat Password\"\r\n              name=\"password\"\r\n              required\r\n            />\r\n            <input\r\n              className={styles.input}\r\n              type=\"submit\"\r\n              defaultValue=\"Log In\"\r\n            />\r\n            <h4 style={{ color: \"red\", marginbottom: \"10px\" }}></h4>\r\n          </form>\r\n          {/* Remind Passowrd */}\r\n\r\n          <div className={styles.formFooter}>\r\n            {pagemessage === \"\" ? (\r\n              <div>\r\n                Already have a account ?{\" \"}\r\n                <a className={styles.underlineHover} href=\"/login\">\r\n                  Login here\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              <div style={{ color: \"green\" }}>\r\n                <b>{pagemessage} </b>\r\n                <a className={styles.underlineHover} href=\"/login\">\r\n                  Login here\r\n                </a>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\temp\\socketio_chat\\client\\src\\components\\AccessKey.js",["158","159","160","161","162"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { serverhost } from \"../api/url\";\r\nimport io from \"socket.io-client\";\r\nimport CodeGenerator from \"./CodeGenerator\";\r\nimport CodeSubmitForm from \"./CodeSubmitForm\";\r\nimport ReqSenderMsgBox from \"./Modal/ReqSenderMsgBox\";\r\nimport ReqReceiverMsgBox from \"./Modal/ReqReceiverMsgBox\";\r\nimport ReqErrorMsgBox from \"./Modal/ReqErrorMsgBox\";\r\nimport styles from \"../css/dashboard.module.css\";\r\n\r\nlet socket;\r\n\r\nexport default function AccessKey(props) {\r\n  const [accessCode, setaccessCode] = useState(\"----\");\r\n  const [join_accessCode, setjoin_accessCode] = useState(\"\");\r\n  //control modal box\r\n  const [receivedRequest, setreceivedRequest] = useState(false);\r\n  const [sendedRequest, setsendedRequest] = useState(false);\r\n  const [IsRequestErr, setIsRequestErr] = useState(false);\r\n  const [RequestErrMsg, setRequestErrMsg] = useState(\"\");\r\n  //peer reponse\r\n  const [peerReponse, setpeerReponse] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket = io(serverhost.url);\r\n  }, [serverhost]);\r\n\r\n  //Join the socket room with access code\r\n  useEffect(() => {\r\n    console.log(\"Access Code chagned\");\r\n    if (accessCode != \"----\") {\r\n      socket.emit(\"join_room\", { user: props.userName, code: accessCode });\r\n    }\r\n  }, [accessCode]);\r\n\r\n  //listen to peer request\r\n  useEffect(() => {\r\n    socket.on(\"peer_request\", (data) => {\r\n      console.log(\" There is a request from user \" + data);\r\n      setreceivedRequest(true);\r\n    });\r\n    return () => {\r\n      socket.off(\"peer_request\");\r\n    };\r\n  });\r\n\r\n  //listen to peer response\r\n  useEffect(() => {\r\n    socket.on(\"peer_response\", (data) => {\r\n      console.log(\" There is a response from user :\" + data);\r\n      console.log(\"************\" + join_accessCode);\r\n      if (data == \"Accepted\") {\r\n        props.chatStarted(join_accessCode);\r\n      } else {\r\n        console.log(\"Request Denied\");\r\n        setpeerReponse(true);\r\n      }\r\n    });\r\n    return () => {\r\n      socket.off(\"peer_response\");\r\n    };\r\n  });\r\n\r\n  const requestToChannel2 = () => {\r\n    //ValidateAccessCode\r\n    Axios.post(\r\n      `${serverhost.url}/keyverify`,\r\n      {\r\n        code: join_accessCode,\r\n      },\r\n      {\r\n        headers: {\r\n          \"x-access-token\": sessionStorage.getItem(\"token\"),\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      if (response.data.message != true) {\r\n        setIsRequestErr(true);\r\n        setRequestErrMsg(response.data.message);\r\n      } else {\r\n        setsendedRequest(true);\r\n        socket.emit(\"join_room\", {\r\n          user: props.userName,\r\n          code: join_accessCode,\r\n        });\r\n        socket.emit(\"join_request\", {\r\n          room: `${join_accessCode}`,\r\n          message: \"request\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //response to the requestor\r\n  const accpetRequest = (e) => {\r\n    closeModal();\r\n    console.log(\"e. \" + e.currentTarget.value);\r\n    console.log(\"send accpet  reponse\" + accessCode);\r\n    socket.emit(\"join_response\", {\r\n      room: `${accessCode}`,\r\n      message: e.currentTarget.value,\r\n    });\r\n    console.log(\"acceptRequest  ****************\");\r\n    if (e.currentTarget.value === \"Accepted\") {\r\n      props.chatStarted(accessCode);\r\n    }\r\n  };\r\n\r\n  const setAccessCode = (code) => {\r\n    setaccessCode(code);\r\n  };\r\n\r\n  const setJoin_accessCode = (code) => {\r\n    setjoin_accessCode(code);\r\n  };\r\n\r\n  function closeModal() {\r\n    setreceivedRequest(false);\r\n    setsendedRequest(false);\r\n    setIsRequestErr(false);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.mainPage}>\r\n      <div className={styles.mainContainer}>\r\n        <CodeGenerator setaccessCode={setAccessCode} accessCode={accessCode} />\r\n        <CodeSubmitForm\r\n          setJoin_accessCode={setJoin_accessCode}\r\n          request={requestToChannel2}\r\n        />\r\n\r\n        <ReqReceiverMsgBox\r\n          active={receivedRequest}\r\n          close={closeModal}\r\n          response={accpetRequest}\r\n        />\r\n        <ReqSenderMsgBox\r\n          active={sendedRequest}\r\n          close={closeModal}\r\n          response={peerReponse}\r\n        />\r\n        <ReqErrorMsgBox\r\n          active={IsRequestErr}\r\n          close={closeModal}\r\n          message={RequestErrMsg}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\temp\\socketio_chat\\client\\src\\components\\Chatboard.js",["163","164","165","166","167","168","169","170"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { serverhost } from \"../api/url\";\r\nimport io from \"socket.io-client\";\r\nimport \"../css/chatboard.css\";\r\nimport \"../css/typingDot.css\";\r\n\r\nlet socket;\r\n\r\nexport default function Chatboard(props) {\r\n  const [message, setmessage] = useState(\"\");\r\n  const [messageList, setmessageList] = useState([]);\r\n  const [connetionStatus, setconnetionStatus] = useState(\"\");\r\n  const [userTyping, setuserTyping] = useState(false);\r\n\r\n  const channel = props.channel;\r\n  const username = props.userName;\r\n\r\n  useEffect(() => {\r\n    socket = io(serverhost.url);\r\n  }, [serverhost]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", (ev) => {\r\n      ev.returnValue = \"Are you sure ?\";\r\n    });\r\n  }, [serverhost]);\r\n\r\n  useEffect(() => {\r\n    //socket.emit(\"join_room\", props.channel);\r\n    console.log(\"join_rom\" + { user: props.userName, code: channel });\r\n    socket.emit(\"join_room\", { user: props.userName, code: channel });\r\n  }, [channel]);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"received message\");\r\n    socket.on(\"receive_message\", (data) => {\r\n      setmessageList([...messageList, data]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"receive_message\");\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on(\"dcNotice\", (data) => {\r\n      setconnetionStatus(data);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"dcNotice\");\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_userTyping\", (data) => {\r\n      //console.log(\"eff\" + data);\r\n      setuserTyping(true);\r\n    });\r\n\r\n    const interval = setInterval(() => {\r\n      setuserTyping(false);\r\n    }, 2000);\r\n\r\n    return () => {\r\n      socket.off(\"receive_userTyping\");\r\n      //console.log(\"*********************************************\");\r\n      clearInterval(interval);\r\n    };\r\n  });\r\n\r\n  const scroll = () => {\r\n    let chat = document.getElementById(\"msger-chat\");\r\n    chat.scrollTop += 500;\r\n  };\r\n\r\n  useEffect(() => {\r\n    scroll();\r\n  }, [messageList]);\r\n\r\n  const sendMessage = async (e) => {\r\n    //prevent page refresh\r\n    e.preventDefault();\r\n    //console.log(e.target.value);\r\n    if (message !== \"\") {\r\n      let messageContent = {\r\n        room: channel,\r\n        content: {\r\n          author: username,\r\n          message: message,\r\n          timestamp: `${new Date()}`,\r\n        },\r\n      };\r\n\r\n      await socket.emit(\"send_message\", messageContent);\r\n      setmessageList([...messageList, messageContent.content]);\r\n      setmessage(\"\");\r\n      e.target.reset();\r\n    }\r\n  };\r\n\r\n  const sendTypingStatus = async () => {\r\n    //console.log(\"typing\");\r\n    await socket.emit(\"userTyping\", \"is typing\");\r\n  };\r\n\r\n  const displayTime = (stamp) => {\r\n    var date = new Date(stamp);\r\n    // Hours part from the timestamp\r\n    var hours = date.getHours();\r\n    // Minutes part from the timestamp\r\n    var minutes = \"0\" + date.getMinutes();\r\n    // Seconds part from the timestamp\r\n    var seconds = \"0\" + date.getSeconds();\r\n    var formattedTime =\r\n      hours + \":\" + minutes.substr(-2) + \":\" + seconds.substr(-2);\r\n\r\n    return formattedTime;\r\n  };\r\n\r\n  return (\r\n    <div className=\"board-body\">\r\n      <section className=\"msger\">\r\n        <header className=\"msger-header\">\r\n          <div className=\"msger-header-title\">\r\n            <i className=\"fas fa-comment-alt\" />\r\n\r\n            <div>Room ID: {channel}</div>\r\n          </div>\r\n          <div className=\"msger-header-options\">\r\n            <span>\r\n              <i className=\"fas fa-cog\" />\r\n            </span>\r\n          </div>\r\n        </header>\r\n        <main id=\"msger-chat\" className=\"msger-chat\">\r\n          {messageList.map((val, key) => {\r\n            return (\r\n              <div\r\n                className={\r\n                  val.author == username ? \"msg right-msg\" : \"msg left-msg\"\r\n                }\r\n              >\r\n                <div className=\"msg-bubble\">\r\n                  <div className=\"msg-info\">\r\n                    <div className=\"msg-info-name\">{val.author}</div>\r\n                    <div className=\"msg-info-time\">\r\n                      {displayTime(val.timestamp)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"msg-text\">{val.message}</div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          {userTyping ? (\r\n            <div className=\"msg-bubble-typing\">\r\n              <div style={{ margin: \"auto\" }} className=\"dot-pulse\"></div>\r\n            </div>\r\n          ) : null}\r\n          {connetionStatus == \"\" ? null : (\r\n            <div className=\"msg-bubble-announcement\" style={{ color: \"red\" }}>\r\n              {connetionStatus}\r\n            </div>\r\n          )}\r\n        </main>\r\n        <form onSubmit={sendMessage} className=\"msger-inputarea\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"msger-input\"\r\n            placeholder=\"Enter your message...\"\r\n            onChange={(e) => {\r\n              setmessage(e.target.value);\r\n              sendTypingStatus();\r\n            }}\r\n            disabled={connetionStatus == \"\" ? \"\" : \"disabled\"}\r\n          />\r\n          <button\r\n            className=\"msger-send-btn\"\r\n            disabled={connetionStatus == \"\" ? \"\" : \"disabled\"}\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","C:\\temp\\socketio_chat\\client\\src\\components\\Profile.js",[],"C:\\temp\\socketio_chat\\client\\src\\api\\url.js",[],"C:\\temp\\socketio_chat\\client\\src\\components\\CodeGenerator.js",["171"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { serverhost } from \"../api/url\";\r\nimport styles from \"../css/dashboard.module.css\";\r\nimport styles2 from \"../css/signInOut.module.css\";\r\n\r\nexport default function CodeGenerator(props) {\r\n  const [expireCounter, setexpireCounter] = useState(0);\r\n  const [getKeyMessage, setgetKeyMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n\r\n    expireCounter > 0 &&\r\n      setTimeout(() => {\r\n        if (!unmounted) {\r\n          setexpireCounter(expireCounter - 1);\r\n        }\r\n      }, 1000);\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, [expireCounter]);\r\n\r\n  const startTimer = () => {\r\n    setexpireCounter(60);\r\n  };\r\n\r\n  const getKey = () => {\r\n    Axios.post(`${serverhost.url}/keygen`, null, {\r\n      headers: {\r\n        \"x-access-token\": sessionStorage.getItem(\"token\"),\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data.code);\r\n        props.setaccessCode(response.data.code);\r\n        startTimer();\r\n      })\r\n      .catch((error) => {\r\n        switch (error.response.status) {\r\n          case 403:\r\n            setgetKeyMessage(\"Oops, something went wrong\");\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`${styles2.wrapper} ${styles2.fadeInDown} ${styles.first}`}\r\n      >\r\n        <div className={styles2.formContent}>\r\n          <form>\r\n            <div>\r\n              <div style={{ letterSpacing: \"10px\" }}>\r\n                <h1 style={expireCounter === 0 ? { color: \"#DCDCDC\" } : null}>\r\n                  {props.accessCode}\r\n                </h1>\r\n              </div>\r\n              {expireCounter > 0 ? (\r\n                <h5>After {expireCounter} second, the code will expire</h5>\r\n              ) : (\r\n                <h5>Code expired, please get a new code</h5>\r\n              )}\r\n            </div>\r\n            {getKeyMessage}\r\n          </form>\r\n\r\n          <button\r\n            className={styles2.button}\r\n            style={\r\n              expireCounter !== 0\r\n                ? {\r\n                    backgroundColor: \"grey\",\r\n                  }\r\n                : null\r\n            }\r\n            onClick={getKey}\r\n            disabled={expireCounter !== 0}\r\n          >\r\n            Get a new key\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={styles.codeGeneratorCard}></div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\temp\\socketio_chat\\client\\src\\components\\CodeSubmitForm.js",["172","173","174"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../css/signInOut.module.css\";\r\n\r\nexport default function CodeSubmitForm(props) {\r\n  const [request_status_message, setrequest_status_message] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <div className={`${styles.wrapper} ${styles.fadeInDown} ${styles.third}`}>\r\n        <div className={styles.formContent}>\r\n          <form>\r\n            <div className=\"container\">\r\n              <label htmlFor=\"Code\"></label>\r\n              <h4 style={{ marginBottom: \"20px\", marginTop: \"20px\" }}>\r\n                Access your peers chat channel\r\n              </h4>\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  letterSpacing: \"10px\",\r\n                  margin: \"10px\",\r\n                }}\r\n                maxLength=\"4\"\r\n                placeholder=\"your peers code\"\r\n                onChange={(e) => {\r\n                  if (e.target.value.length == 4) {\r\n                    props.setJoin_accessCode(e.target.value);\r\n                    console.log(\"AccessKey: \" + e.target.value);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </form>\r\n          <button className={styles.button} onClick={props.request}>\r\n            {\" \"}\r\n            Join !{\" \"}\r\n          </button>\r\n          <h2>{request_status_message}</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\temp\\socketio_chat\\client\\src\\components\\Modal\\ReqSenderMsgBox.js",["175"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport loading_icon from \"../../image/loading.gif\";\r\n\r\nexport default function MessageBox(props) {\r\n  const [reponse, setreponse] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Modal.setAppElement(\"body\");\r\n    setreponse(props.response);\r\n  }, [props.response]);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={props.active}\r\n      onRequestClose={props.close}\r\n      style={customStyles}\r\n      contentLabel=\"Example Modal\"\r\n    >\r\n      {!reponse ? (\r\n        <div>\r\n          <h2>You have sent a chat request !</h2>\r\n          <img\r\n            style={{\r\n              display: \"block\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n            }}\r\n            src={loading_icon}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <h2>Request denied</h2>\r\n      )}\r\n\r\n      <button value=\"Cancel\" onClick={props.close}>\r\n        Cancel\r\n      </button>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n","C:\\temp\\socketio_chat\\client\\src\\components\\Modal\\ReqReceiverMsgBox.js",["176"],"import React, { useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nexport default function ReqReceiverMsgBox(props) {\r\n  useEffect(() => {\r\n    Modal.setAppElement(\"body\");\r\n  });\r\n\r\n  const rejectReq = () => {};\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={props.active}\r\n        onRequestClose={props.close}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <h2>You have received a chat request !</h2>\r\n        <button value=\"Accepted\" onClick={props.response}>\r\n          Accept\r\n        </button>\r\n        <button value=\"Denied\" onClick={props.response}>\r\n          Not now\r\n        </button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n","C:\\temp\\socketio_chat\\client\\src\\components\\Modal\\ReqErrorMsgBox.js",[],["177","178"],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"188","line":60,"column":13,"nodeType":"189","endLine":60,"endColumn":57},{"ruleId":"190","severity":1,"message":"191","line":6,"column":3,"nodeType":"192","messageId":"193","endLine":6,"endColumn":27,"fix":"194"},{"ruleId":"195","severity":1,"message":"196","line":18,"column":35,"nodeType":"197","messageId":"198","endLine":18,"endColumn":37},{"ruleId":"187","severity":1,"message":"199","line":22,"column":11,"nodeType":"189","endLine":22,"endColumn":41},{"ruleId":"183","severity":1,"message":"200","line":10,"column":20,"nodeType":"185","messageId":"186","endLine":10,"endColumn":31},{"ruleId":"183","severity":1,"message":"201","line":17,"column":10,"nodeType":"185","messageId":"186","endLine":17,"endColumn":25},{"ruleId":"183","severity":1,"message":"202","line":17,"column":27,"nodeType":"185","messageId":"186","endLine":17,"endColumn":45},{"ruleId":"203","severity":1,"message":"204","line":32,"column":6,"nodeType":"205","endLine":32,"endColumn":18,"suggestions":"206"},{"ruleId":"203","severity":1,"message":"207","line":52,"column":6,"nodeType":"205","endLine":52,"endColumn":18,"suggestions":"208"},{"ruleId":"195","severity":1,"message":"209","line":69,"column":16,"nodeType":"197","messageId":"198","endLine":69,"endColumn":18},{"ruleId":"183","severity":1,"message":"210","line":105,"column":9,"nodeType":"185","messageId":"186","endLine":105,"endColumn":23},{"ruleId":"183","severity":1,"message":"211","line":145,"column":7,"nodeType":"185","messageId":"186","endLine":145,"endColumn":15},{"ruleId":"195","severity":1,"message":"209","line":165,"column":24,"nodeType":"197","messageId":"198","endLine":165,"endColumn":26},{"ruleId":"195","severity":1,"message":"209","line":182,"column":43,"nodeType":"197","messageId":"198","endLine":182,"endColumn":45},{"ruleId":"183","severity":1,"message":"212","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":9},{"ruleId":"203","severity":1,"message":"204","line":18,"column":6,"nodeType":"205","endLine":18,"endColumn":18,"suggestions":"213"},{"ruleId":"203","severity":1,"message":"207","line":24,"column":6,"nodeType":"205","endLine":24,"endColumn":15,"suggestions":"214"},{"ruleId":"195","severity":1,"message":"209","line":89,"column":30,"nodeType":"197","messageId":"198","endLine":89,"endColumn":32},{"ruleId":"179","replacedBy":"215"},{"ruleId":"181","replacedBy":"216"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"217","line":44,"column":9,"nodeType":"185","messageId":"186","endLine":44,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":6,"column":3,"nodeType":"192","messageId":"193","endLine":6,"endColumn":27,"fix":"218"},{"ruleId":"219","severity":1,"message":"220","line":42,"column":13,"nodeType":"189","endLine":42,"endColumn":60},{"ruleId":"187","severity":1,"message":"199","line":22,"column":11,"nodeType":"189","endLine":22,"endColumn":41},{"ruleId":"221","severity":1,"message":"222","line":76,"column":13,"nodeType":"189","endLine":76,"endColumn":64},{"ruleId":"203","severity":1,"message":"204","line":27,"column":6,"nodeType":"205","endLine":27,"endColumn":18,"suggestions":"223"},{"ruleId":"195","severity":1,"message":"196","line":32,"column":20,"nodeType":"197","messageId":"198","endLine":32,"endColumn":22},{"ruleId":"203","severity":1,"message":"207","line":35,"column":6,"nodeType":"205","endLine":35,"endColumn":18,"suggestions":"224"},{"ruleId":"195","severity":1,"message":"209","line":53,"column":16,"nodeType":"197","messageId":"198","endLine":53,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":78,"column":33,"nodeType":"197","messageId":"198","endLine":78,"endColumn":35},{"ruleId":"183","severity":1,"message":"225","line":1,"column":38,"nodeType":"185","messageId":"186","endLine":1,"endColumn":44},{"ruleId":"203","severity":1,"message":"204","line":20,"column":6,"nodeType":"205","endLine":20,"endColumn":18,"suggestions":"226"},{"ruleId":"203","severity":1,"message":"204","line":26,"column":6,"nodeType":"205","endLine":26,"endColumn":18,"suggestions":"227"},{"ruleId":"203","severity":1,"message":"207","line":32,"column":6,"nodeType":"205","endLine":32,"endColumn":15,"suggestions":"228"},{"ruleId":"195","severity":1,"message":"209","line":141,"column":30,"nodeType":"197","messageId":"198","endLine":141,"endColumn":32},{"ruleId":"195","severity":1,"message":"209","line":161,"column":28,"nodeType":"197","messageId":"198","endLine":161,"endColumn":30},{"ruleId":"195","severity":1,"message":"209","line":176,"column":39,"nodeType":"197","messageId":"198","endLine":176,"endColumn":41},{"ruleId":"195","severity":1,"message":"209","line":180,"column":39,"nodeType":"197","messageId":"198","endLine":180,"endColumn":41},{"ruleId":"229","severity":1,"message":"230","line":44,"column":11,"nodeType":"231","messageId":"232","endLine":45,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"233","line":5,"column":34,"nodeType":"185","messageId":"186","endLine":5,"endColumn":59},{"ruleId":"195","severity":1,"message":"209","line":28,"column":45,"nodeType":"197","messageId":"198","endLine":28,"endColumn":47},{"ruleId":"219","severity":1,"message":"220","line":23,"column":11,"nodeType":"189","endLine":30,"endColumn":13},{"ruleId":"183","severity":1,"message":"234","line":9,"column":9,"nodeType":"185","messageId":"186","endLine":9,"endColumn":18},{"ruleId":"179","replacedBy":"235"},{"ruleId":"181","replacedBy":"236"},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-rename","Destructuring assignment isProtected unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"239","text":"240"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setaccessID' is assigned a value but never used.","'peerJoinrequest' is assigned a value but never used.","'setpeerJoinrequest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'serverhost'. Either exclude it or remove the dependency array. Outer scope values like 'serverhost' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["241"],"React Hook useEffect has a missing dependency: 'props.userName'. Either include it or remove the dependency array.",["242"],"Expected '===' and instead saw '=='.","'declineRequest' is assigned a value but never used.","'subtitle' is defined but never used.","'e' is defined but never used.",["243"],["244"],["237"],["238"],"'userAuthtemp' is assigned a value but never used.",{"range":"245","text":"240"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["246"],["247"],"'useRef' is defined but never used.",["248"],["249"],["250"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'setrequest_status_message' is assigned a value but never used.","'rejectReq' is assigned a value but never used.",["237"],["238"],"no-global-assign","no-unsafe-negation",[159,183],"isProtected",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"251","fix":"255"},{"desc":"256","fix":"257"},[159,183],{"desc":"251","fix":"258"},{"desc":"253","fix":"259"},{"desc":"251","fix":"260"},{"desc":"251","fix":"261"},{"desc":"256","fix":"262"},"Update the dependencies array to be: []",{"range":"263","text":"264"},"Update the dependencies array to be: [accessCode, props.userName]",{"range":"265","text":"266"},{"range":"267","text":"264"},"Update the dependencies array to be: [channel, props.userName]",{"range":"268","text":"269"},{"range":"270","text":"264"},{"range":"271","text":"266"},{"range":"272","text":"264"},{"range":"273","text":"264"},{"range":"274","text":"269"},[1011,1023],"[]",[1499,1511],"[accessCode, props.userName]",[483,495],[719,728],"[channel, props.userName]",[1063,1075],[1308,1320],[619,631],[769,781],[1005,1014]]